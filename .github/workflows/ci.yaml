name: CI - test and linting automation

on:
  push:
    branches: [ main, jest ]
  pull_request:
    branches: [ main, jest ]

jobs:
  build:
    runs-on: ubuntu-latest
    env: 
      working-directory: ./server
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js v.14
      uses: actions/setup-node@v1
      with:
        node-version: '14'
    # Install dependencies
    - run: npm ci
      working-directory: ${{ env.working-directory }}
    - run: npm test
      working-directory: ${{ env.working-directory }}
    # - name: Tests
    #   if: ${{ success() }}
    #   run: |
    #     curl --request POST --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' --header 'content-type: application/json' --data '{
    #       "context": "tests",
    #       "state": "success",
    #       "description": "Tests passed",
    #       "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
    #     }'
    # - name: Tests
    #   if: ${{ failure() }}
    #   run: |
    #     curl --request POST --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' --header 'content-type: application/json' --data '{
    #       "context": "tests",
    #       "state": "failure",
    #       "description": "Tests failed",
    #       "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
    #     }'
    - run: npm run lint
      working-directory: ${{ env.working-directory }}
    # - name: Linting
    #   if: ${{ success() }}
    #   run: |
    #     curl --request POST --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' --header 'content-type: application/json' --data '{
    #       "context": "lint",
    #       "state": "success",
    #       "description": "Linting passed",
    #       "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
    #     }'
    # - name: Linting
    #   if: ${{ failure() }}
    #   run: |
    #     curl --request POST --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' --header 'content-type: application/json' --data '{
    #       "context": "lint",
    #       "state": "failure",
    #       "description": "Linting failed",
    #       "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
    #     }'
    - name: Pass steps context
      env:
        STEPS_CONTEXT: ${{ toJSON(job) }}
      run: echo "$STEPS_CONTEXT"